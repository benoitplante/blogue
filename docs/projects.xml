<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Benoit Plante</title>
<link>https://benoitplante.github.io/projects.html</link>
<atom:link href="https://benoitplante.github.io/projects.xml" rel="self" type="application/rss+xml"/>
<description>Réflexions, cas d’usage et outils à l’interface entre IA et psychologie</description>
<generator>quarto-1.7.31</generator>
<lastBuildDate>Tue, 10 Jun 2025 04:00:00 GMT</lastBuildDate>
<item>
  <title>Nettoyage de la base Famili@ : entre patience, regex et satisfaction scientifique</title>
  <link>https://benoitplante.github.io/projets/2025-06-10-nettoyage-familia/</link>
  <description><![CDATA[ 




<p>Après l’extraction des données, mon objectif était simple en apparence : transformer la base de données Famili@, extraite via webscraping, en une base de donnée propre, harmonisé et interrogeable. Plus facile à dire qu’à faire. Dans cette deuxième étape du projet, j’ai pris le temps de nettoyer, restructurer et enrichir les données de manière rigoureuse. Et, disons-le franchement, j’ai aussi passé beaucoup (trop ?) de temps à apprivoiser les subtilités des expressions régulières.</p>
<section id="le-point-de-départ-une-base-brute-mais-prometteuse" class="level2">
<h2 class="anchored" data-anchor-id="le-point-de-départ-une-base-brute-mais-prometteuse">Le point de départ : une base brute, mais prometteuse</h2>
<p>La base initiale comportait des champs tels que le titre, les auteurs, les mots-clés, les résumés, les dates, les types de documents, etc. Tous présentés dans une structure JSON insérée dans des balises HTML. Une fois le webscraping complété (voir la première publication pour les détails techniques), je me retrouvais avec un <a href="https://github.com/benoitplante/familia/blob/main/database/df_projets_familia.csv">CSV</a> contenant plusieurs centaines de lignes, mais aussi plusieurs défis : champs non normalisés, balises HTML, redondances et mentions floues.</p>
</section>
<section id="le-nettoyage-en-9-étapes-et-beaucoup-de-mutate" class="level2">
<h2 class="anchored" data-anchor-id="le-nettoyage-en-9-étapes-et-beaucoup-de-mutate">Le nettoyage en 9 étapes (et beaucoup de <code>mutate()</code>)</h2>
<p>Le processus de nettoyage s’est articulé autour de 9 étapes, où chaque transformation avait son rôle dans la simplification, l’harmonisation ou l’enrichissement de la base de données (le code utilisé est disponible <a href="https://github.com/benoitplante/familia/blob/main/Script%20R/nettoyage_familia.R">ici</a>). Pour les curieux de R, chaque transformation repose principalement sur le package <strong><code>dplyr</code></strong> (issu du <strong><code>tidyverse</code></strong>), et quelques ajouts stratégiques comme <strong><code>stringr</code></strong>, <strong><code>naniar</code></strong>, <strong><code>xml2</code></strong> et <strong><code>tidytext</code></strong>.</p>
<ol type="1">
<li><p><strong>Nettoyage des mots-clés (<code>stringr</code>)</strong><br>
J’ai transformé tout en minuscules (<code>str_to_lower()</code>), réduit les espaces superflus (<code>str_replace_all()</code> avec l’expression <code>\s+</code>), et appliqué un petit <code>str_trim()</code> pour retirer les blancs en début/fin de chaîne. Rien de révolutionnaire, mais indispensable pour éviter d’avoir <code>parentalité</code>, <code>Parentalité</code> et <code>PARENTALITÉ</code> comme trois entrées distinctes.</p></li>
<li><p><strong>Nettoyage des auteurs</strong><br>
Même recette que pour les mots-clés, avec une touche de <code>str_to_title()</code> pour un affichage propre : chaque nom commence par une majuscule. Pratique pour faciliter une éventuelle agrégation par auteur par la suite.</p></li>
<li><p><strong>Analyse des données manquantes (<code>naniar</code>)</strong><br>
Un petit détour par <code>naniar::summarise()</code> pour identifier les champs trop souvent vides. Le numéro de publication (56 % manquant), le volume (53 %), le nom de la revue (36 %) ou les pages (35 %) étaient plus gravement touchés, mais heureusement moins essentiels pour les objectifs de ce projet. Ces constats m’ont permis de faire des choix éclairés sur ce qu’il valait la peine de conserver et ce que je pouvais laisser de côté. Un rappel que parfois, épurer, c’est aussi mieux comprendre.</p></li>
<li><p><strong>Extraction de l’année</strong><br>
Le champ <code>date</code> contenait toutes sortes de formats (ex. : “2001”, “vers 1998”, “2001-2003”). Avec une expression régulière <code>str_extract(., "\\d{4}")</code>, j’ai simplement récupéré la première année à 4 chiffres. Cela va introduire un peu d’imprécision dans les dates, mais va simplifier les analyses longitudinales. Puis, j’ai utilisé <code>as.integer()</code> pour que R arrête de croire que c’est une chaîne de caractères.</p></li>
<li><p><strong>Standardisation des types de documents</strong><br>
Grâce à <code>case_when()</code>, j’ai recodé tous les libellés de type documentaire (ex. : “Mémoire de maîtrise”, “rapport”, “article”) en quatre grandes familles : <code>"Thèse/Mémoire"</code>, <code>"Rapport"</code>, <code>"Article"</code>, et <code>"Autre"</code>. Cela rend l’analyse bien plus claire.</p></li>
<li><p><strong>Nettoyage des titres</strong><br>
Suppression des guillemets et des apostrophes avec <code>str_replace_all("["'’]", "")</code>, conversion en minuscules (<code>str_to_lower()</code>) et retrait des doublons d’espace (<code>str_squish()</code>).</p></li>
<li><p><strong>Nettoyage du HTML dans les résumés (<code>xml2</code>)</strong><br>
Les données textes provenant du site contenaient encore des balises HTML. Pour extraire uniquement le texte utile, j’ai encapsulé le contenu dans une balise <code>&lt;body&gt;</code> fictive, puis j’ai utilisé <code>xml2::read_html()</code> et <code>xml2::xml_text()</code> pour récupérer le contenu lisible.</p></li>
<li><p><strong>Extraction des composantes méthodologiques</strong><br>
Pour <code>methode_instruments</code>, j’ai extrait ce qui apparaissait entre <code>Instruments :</code> et <code>Type de traitement des données</code>.<br>
Pour <code>methode_analyse</code>, j’ai capté le contenu suivant <code>Type de traitement des données :</code>.</p></li>
<li><p><strong>Sélection des colonnes utiles (<code>select()</code>)</strong><br>
J’ai conservé uniquement les colonnes utiles : titre, auteurs, année, type, mots-clés, instruments et analyse.</p></li>
</ol>
</section>
<section id="un-avantaprès-qui-parle" class="level2">
<h2 class="anchored" data-anchor-id="un-avantaprès-qui-parle">Un avant/après qui parle</h2>
<p>Le fichier initial contenait toutes les données extraites du site, sans nettoyage. Le fichier final, <a href="https://github.com/benoitplante/familia/blob/main/database/df_projets_familia_finale.csv"><code>df_projets_familia_finale.csv</code></a>, contient des champs standardisés, prêts à être analysés qualitativement ou quantitativement. Voici les colonnes présentes dans cette version finale :</p>
<ul>
<li><p><code>titre_clean</code> : le titre du projet, nettoyé (minuscules, retrait des guillemets et espaces superflus).</p></li>
<li><p><code>auteurs</code> : les noms des auteurs, harmonisés avec majuscules initiales.</p></li>
<li><p><code>annee_extrait</code> : l’année extraite automatiquement à partir de la chaîne de date.</p></li>
<li><p><code>type_doc_std</code> : le type de document recodé (ex. : Thèse/Mémoire, Article, Rapport, Autre).</p></li>
<li><p><code>mots_cles</code> : les mots-clés nettoyés (espaces, casse).</p></li>
<li><p><code>methode_instruments</code> : les instruments utilisés dans l’étude, extraits automatiquement (ex. : questionnaires).</p></li>
<li><p><code>methode_analyse</code> : le type de traitement des données (ex. : analyse statistique).</p></li>
</ul>
</section>
<section id="ce-que-jai-appris-ou-réappris" class="level2">
<h2 class="anchored" data-anchor-id="ce-que-jai-appris-ou-réappris">Ce que j’ai appris (ou réappris)</h2>
<ul>
<li><p><strong>Les expressions régulières sont puissantes… mais sensibles</strong>. Un espace ou une majuscule mal gérée, et tout s’écroule. Et plus encore : selon que l’on utilise un point-virgule, un retour à la ligne ou trois espaces insécables, le comportement peut changer radicalement. Bref, il faut apprendre à parler regex couramment.</p></li>
<li><p><strong>Toujours valider les extractions sur plusieurs cas</strong>. Une regex qui fonctionne sur 90 % des cas, c’est parfois insuffisant. Les 10 % restants peuvent complètement fausser une analyse — surtout s’ils contiennent des cas atypiques ou significatifs.</p></li>
<li><p><strong>Conserver une version brute, une version nettoyée, et une trace du code</strong> est crucial pour la reproductibilité. J’ajouterais : versionner les fichiers, commenter son code et garder en tête qu’un jeu de données évolue presque toujours en cours de route.</p></li>
</ul>
</section>
<section id="prochaine-étape" class="level2">
<h2 class="anchored" data-anchor-id="prochaine-étape">Prochaine étape</h2>
<p>Maintenant que j’ai une base de donnée prêt à être utiliser, je vais pouvoir débuter les analyses pour mieux comprendre l’évolution de la recherche en psychologie de la famille au Québec dans les denières années. À suivre…</p>


</section>

 ]]></description>
  <category>Méthodologie augmentée par l’IA</category>
  <category>Utilisation appliquée de l&#39;IA</category>
  <guid>https://benoitplante.github.io/projets/2025-06-10-nettoyage-familia/</guid>
  <pubDate>Tue, 10 Jun 2025 04:00:00 GMT</pubDate>
  <media:content url="https://benoitplante.github.io/projets/2025-06-10-nettoyage-familia/banner.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Extraire les données de Famili@ en collaboration avec l’IA</title>
  <link>https://benoitplante.github.io/projets/2025-06-09-webscrapping-familia/</link>
  <description><![CDATA[ <p>Dans ce billet, je documente avec transparence le cheminement technique que j’ai suivi pour extraire les données du site <a href="https://familia.ucs.inrs.ca/">familia.ucs.inrs.ca</a> et créer une base de données exploitable sur la recherche en psychologie portant sur la famille au Québec.</p>
<p>Ce travail s’inscrit dans une démarche plus large de co-analyse assistée par intelligence artificielle, qui vise à produire un portrait actualisé de la recherche en psychologie sur la famille à partir des données disponibles dans la plateforme Famili@. L’objectif à terme est de décrire et quantifier l’évolution des thématiques, des approches théoriques et méthologiques dans la recherche familiale au Québec, dans les 40 dernières années, en collaboration avec une IA générative.</p>
<p>Mais avant d’analyser quoi que ce soit, il faut d’abord extraire les données. Et ce n’était pas chose simple. J’imagine que j’aurais possiblement pu demandé accès à la base documentaire directement, mais je voulais apprendre à faire du webscrapping pour d’autres projets futurs!</p>
<section id="premiers-tests-et-limites-des-approches-classiques" class="level2"><h2 class="anchored" data-anchor-id="premiers-tests-et-limites-des-approches-classiques">1. Premiers tests et limites des approches classiques</h2>
<p>J’ai d’abord exploré le site manuellement. Chaque fiche de projet apparaît dans une boîte visuelle, avec des champs visibles comme le titre, les auteurs, l’année et les mots-clés. Mon premier réflexe a été de tester le package <a href="https://rvest.tidyverse.org/">rvest</a>, qui permet d’extraire des données à partir d’une page HTML. Il s’agit d’un outil très efficace lorsqu’on travaille avec des sites web statiques : on peut identifier des balises HTML précises (comme <code>&lt;h3&gt;</code> pour les titres ou des classes CSS comme <code>.auteursNotice</code>) et extraire leur contenu directement dans un tableau.</p>
<p>Mais rapidement, j’ai compris que les données ne se trouvaient pas directement dans le HTML statique récupéré par <a href="https://rvest.tidyverse.org/">rvest</a>. En fait, le contenu est chargé dynamiquement via JavaScript, c’est-à-dire que le HTML initial ne contient pas encore les résultats — ceux-ci apparaissent seulement une fois que le navigateur a exécuté le JavaScript. Et comme <a href="https://rvest.tidyverse.org/">rvest</a> n’exécute pas de JavaScript, il est aveugle à ces contenus. Résultat : les sélecteurs CSS que je testais ne renvoyaient rien ou des blocs incomplets. Il fallait donc une approche capable de simuler le comportement d’un navigateur moderne.</p>
</section><section id="passage-à-chromote-avec-chatgpt" class="level2"><h2 class="anchored" data-anchor-id="passage-à-chromote-avec-chatgpt">2. Passage à Chromote avec ChatGPT</h2>
<p>C’est ici que ChatGPT entre en jeu pour la première fois. L’approche classique ne fonctionnant pas, j’ai posé le problème à l’IA : comment extraire des données qui ne sont pas directement visibles dans le code de la page web, mais qui s’affichent seulement une fois que la page est complètement chargée dans le navigateur&nbsp;?</p>
<p>ChatGPT m’a suggéré une alternative : utiliser le package <a href="https://rstudio.github.io/chromote/">chromote</a>. Ce dernier permet de piloter un navigateur Chrome en arrière-plan, un peu comme si on simulait un utilisateur réel qui charge la page, attend que tout s’affiche, puis regarde le contenu une fois complet. On appelle cela un navigateur “sans tête” (headless).</p>
<p>Grâce à <a href="https://rstudio.github.io/chromote/">chromote</a>, on peut donc accéder à des pages web après que le JavaScript a fini de s’exécuter — ce qui est essentiel ici, puisque le site familia.ucs.inrs.ca n’affiche pas directement les données dans le code source, mais les ajoute ensuite dynamiquement à la page.</p>
<p>Avec l’aide de ChatGPT, nous avons mis en place une boucle automatique&nbsp;: elle charge chaque page, attend l’affichage complet des données, extrait le contenu HTML généré dynamiquement, puis le transmet à <a href="https://rvest.tidyverse.org/">rvest</a> pour l’analyse. C’était déjà une belle avancée.</p>
<p>Mais très vite, je me suis rendu compte que les éléments visibles dans la page (comme les titres, les auteurs ou les mots-clés) étaient difficilement récupérables via leurs balises HTML. Les classes CSS n’étaient pas fiables, certaines fiches ne suivaient pas la même structure, et il devenait difficile de tout extraire proprement. Il fallait donc une autre solution.</p>
</section><section id="découverte-de-la-structure-json-cachée" class="level2"><h2 class="anchored" data-anchor-id="découverte-de-la-structure-json-cachée">3. Découverte de la structure JSON cachée</h2>
<p>En continuant à inspecter le site plus attentivement, j’ai découvert un détail qui allait tout changer : chaque fiche de projet comprenait un champ de formulaire invisible à l’écran, un peu comme une petite boîte cachée dans le code. Cette boîte, identifiée par <code>&lt;input name="numeroNotice"&gt;</code>, contenait une information appelée <code>value</code>. Et cette valeur n’était pas une simple phrase, mais une chaîne de caractères au format JSON — une façon très courante de structurer des données dans le monde informatique.</p>
<p>Pour vulgariser : le JSON (JavaScript Object Notation) est une sorte de tableau ou fiche d’information organisée en paires “nom : valeur”. Par exemple, on peut y trouver : <code>"Titre" : "Mon projet de recherche"</code>, <code>"date" : "2024"</code>, <code>"MotsCles" : "parentalité / attachement / adolescence"</code>, etc. Cela signifie que chaque fiche de projet était déjà pré-structurée, et prête à être exploitée… pourvu qu’on sache comment la lire.</p>
<p>Avec l’aide de ChatGPT, nous avons ajusté notre fonction d’extraction pour cibler ces balises <code>&lt;input&gt;</code>, extraire le champ <code>value</code>, et le convertir en données structurées grâce à la fonction <code><a href="https://jeroen.r-universe.dev/jsonlite/reference/fromJSON.html">fromJSON()</a></code> du package <a href="https://jeroen.r-universe.dev/jsonlite">jsonlite</a>. On a ensuite transformé tout cela en tableau (<code>tibble</code>) utilisable dans R.</p>
<p>C’était exactement ce qu’il nous fallait : une façon fiable, standardisée, et complète d’accéder à l’information — sans avoir à deviner la position du titre ou des auteurs dans la page. Une belle découverte rendue possible grâce à un peu de curiosité… et beaucoup d’essais-erreurs.</p>
</section><section id="gestion-des-erreurs-champs-manquants-et-pages-vides" class="level2"><h2 class="anchored" data-anchor-id="gestion-des-erreurs-champs-manquants-et-pages-vides">4. Gestion des erreurs : champs manquants et pages vides</h2>
<p>À partir de ce moment, nous avons rencontré d’autres types de défis. Certaines fiches n’ont pas tous les champs (ex. : <code>URL</code> ou <code>Sommaire</code> absents). L’appel à <code><a href="https://dplyr.tidyverse.org/reference/transmute.html">transmute()</a></code> échouait dès qu’un champ manquait. Avec l’aide de ChatGPT, nous avons ajouté une vérification : si une colonne est absente, on la crée vide (<code>NA</code>). Cette validation permet de fusionner toutes les pages sans erreur.</p>
</section><section id="pagination-dynamique-et-boucle-automatique" class="level2"><h2 class="anchored" data-anchor-id="pagination-dynamique-et-boucle-automatique">5. Pagination dynamique et boucle automatique</h2>
<p>Une fois qu’on savait comment extraire les données d’une page, il restait un défi important : le site ne présente pas tous les projets en une seule fois. Il les répartit sur plusieurs pages, qu’il faut faire défiler en cliquant sur « page suivante ».</p>
<p>Dans un site classique, on pourrait cliquer manuellement ou simuler un clic avec du code. Mais ici, chaque page suivante a une adresse différente dans l’URL, et ces liens sont insérés dans la page au moment de son chargement. Il fallait donc trouver une façon automatique de naviguer de page en page.</p>
<p>ChatGPT m’a proposé une stratégie élégante : plutôt que de simuler un clic, on peut lire directement dans le code de la page s’il existe un lien « suivant », grâce à un attribut appelé <code>rel="next"</code>. Si ce lien est présent, on le suit. Si ce n’est plus le cas, c’est que nous avons atteint la dernière page.</p>
<p>Cette méthode a permis de parcourir l’intégralité du site de manière fluide, sans jamais devoir prédire combien de pages il y avait. Un bon exemple de la manière dont une IA peut suggérer des solutions simples à des problèmes complexes — surtout quand on ne connaît pas toutes les subtilités du fonctionnement d’un site web dynamique.</p>
</section><section id="code-final-commenté" class="level2"><h2 class="anchored" data-anchor-id="code-final-commenté">6. Code final commenté</h2>
<p>Voici le code final complet, que j’ai co-construit avec ChatGPT. Il comprend à la fois la fonction d’extraction à partir du HTML dynamique et celle qui parcourt toutes les pages automatiquement. Je l’ai commenté brièvement pour en faciliter la compréhension.</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/chromote/">chromote</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://rvest.tidyverse.org/">rvest</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://dplyr.tidyverse.org">dplyr</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://stringr.tidyverse.org">stringr</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://tibble.tidyverse.org/">tibble</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://jeroen.r-universe.dev/jsonlite">jsonlite</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fonction qui extrait les données d'une page HTML</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">extract_projects</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">page_html</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">page</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="http://xml2.r-lib.org/reference/read_xml.html">read_html</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">page_html</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">page</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rvest.tidyverse.org/reference/html_element.html">html_elements</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input[name='numeroNotice']"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">json_list</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputs</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rvest.tidyverse.org/reference/html_attr.html">html_attr</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"value"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/lapply.html">lapply</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">fromJSON</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">df</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://dplyr.tidyverse.org/reference/bind_rows.html">bind_rows</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">json_list</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">expected_cols</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Titre"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Auteurs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TypeDocument"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MotsCles"</span>,</span>
<span>                     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Thematiques"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Disciplines"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TypesDocs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sommaire"</span>,</span>
<span>                     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Notice"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"VL"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IS"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SP"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"URL"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">col</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">expected_cols</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">col</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/match.html">%in%</a></span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/names.html">names</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">df</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">df</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">col</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">df</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://dplyr.tidyverse.org/reference/transmute.html">transmute</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    titre <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Titre</span>,</span>
<span>    auteurs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Auteurs</span>,</span>
<span>    annee <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">date</span>,</span>
<span>    type_doc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">TypeDocument</span>,</span>
<span>    mots_cles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">MotsCles</span>,</span>
<span>    thematiques <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Thematiques</span>,</span>
<span>    disciplines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Disciplines</span>,</span>
<span>    types_document <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">TypesDocs</span>,</span>
<span>    sommaire <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Sommaire</span>,</span>
<span>    reference <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Notice</span>,</span>
<span>    revue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">T2</span>,</span>
<span>    volume <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">VL</span>,</span>
<span>    numero <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">IS</span>,</span>
<span>    pages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">SP</span>,</span>
<span>    url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">URL</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fonction principale de scraping multi-pages</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">scrape_all_pages</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">base_url</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">b</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/chromote/reference/ChromoteSession.html">ChromoteSession</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">new</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Page</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navigate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">base_url</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Page</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadEventFired</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/Sys.sleep.html">Sys.sleep</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">all_data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/list.html">list</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">page_num</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">repeat</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/message.html">message</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chargement de la page "</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">page_num</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"..."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/conditions.html">tryCatch</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Runtime</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">evaluate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>        expression <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        new Promise(resolve =&gt; {</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          const waitForResults = () =&gt; {</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            const items = document.querySelectorAll('input[name=\\'numeroNotice\\']');</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            if (items.length &gt; 0) {</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              resolve('ok');</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            } else {</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">              setTimeout(waitForResults, 500);</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          };</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          waitForResults();</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        });"</span></span>
<span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>, error <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">e</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/message.html">message</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Erreur de chargement."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/Sys.sleep.html">Sys.sleep</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">html</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">DOM</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getDocument</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">node_id</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">html</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">root</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">nodeId</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">html_content</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">DOM</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getOuterHTML</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>nodeId <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">node_id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">outerHTML</span></span>
<span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">projects</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract_projects</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">html_content</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">all_data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">page_num</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">projects</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/message.html">message</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Page "</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">page_num</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" récupérée."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">next_url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;"><a href="https://rdrr.io/r/base/conditions.html">tryCatch</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Runtime</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">evaluate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>        expression <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"(function() {</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          const nextBtn = document.querySelector('a[data-ci-pagination-page][rel=\\\"next\\\"]');</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">          return nextBtn ? nextBtn.href : null;</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        })();"</span></span>
<span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">result</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">value</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>, error <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">e</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/NULL.html">is.null</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">next_url</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/message.html">message</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fin du parcours : plus de page suivante."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Page</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navigate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">next_url</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Page</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadEventFired</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/Sys.sleep.html">Sys.sleep</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">page_num</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">page_num</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">b</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">close</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://dplyr.tidyverse.org/reference/bind_rows.html">bind_rows</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">all_data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Appel final</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">base_url</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://familia.ucs.inrs.ca/resultat-de-recherche/?discipline[]=438"</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data_familia</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scrape_all_pages</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">base_url</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/utils/write.table.html">write.csv</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data_familia</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"projets_familia_complet.csv"</span>, row.names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
</section><section id="ce-que-jai-appris-et-ce-que-je-retiens" class="level2"><h2 class="anchored" data-anchor-id="ce-que-jai-appris-et-ce-que-je-retiens">7. Ce que j’ai appris (et ce que je retiens)</h2>
<p>Ce projet m’a permis de vivre une expérience d’apprentissage à la fois technique, méthodologique et réflexive. Voici les principales leçons que j’en tire&nbsp;:</p>
<p><strong>Comprendre la logique d’un site web est un prérequis fondamental.</strong> Avant même de coder, j’ai dû prendre le temps d’inspecter manuellement la structure du site. Ce travail exploratoire m’a permis de réaliser que le HTML visible au départ ne contenait pas les données… ce qui est loin d’être intuitif pour un œil non averti.</p>
<p><strong>Travailler avec une IA a facilité les essais-erreurs.</strong> À chaque difficulté rencontrée, je pouvais reformuler mon problème à ChatGPT. L’IA me proposait alors des pistes de solution, que je testais immédiatement dans R. Cette boucle itérative — formuler, tester, ajuster — a non seulement accéléré mon travail, mais m’a aussi permis de mieux comprendre les logiques sous-jacentes.</p>
<p><strong>La collaboration humain-IA ne remplace pas l’analyse humaine, elle la renforce.</strong> Je suis resté en contrôle tout au long du processus. C’est moi qui inspectais les structures du site, qui interprétais les erreurs, qui décidais quoi extraire. Mais ChatGPT m’a permis d’élargir rapidement mon répertoire technique et de débloquer des obstacles qui, seul, m’auraient sans doute pris beaucoup plus de temps à surmonter.</p>
<p><strong>L’articulation entre outils est essentielle.</strong> <a href="https://rstudio.github.io/chromote/">chromote</a> m’a permis d’accéder à du contenu dynamique, <a href="https://jeroen.r-universe.dev/jsonlite">jsonlite</a> de lire des structures JSON, <a href="https://rvest.tidyverse.org/">rvest</a> de lire le HTML, et <a href="https://dplyr.tidyverse.org">dplyr</a> de structurer les tableaux. Ces outils, utilisés ensemble, ont rendu possible ce qui me semblait complexe au départ.</p>
<p><strong>Finalement, documenter le processus est aussi une forme d’apprentissage.</strong> Prendre le temps d’écrire ce billet m’a permis de prendre du recul sur le chemin parcouru, les décisions prises, et les zones d’incertitude restantes. C’est une bonne pratique que je veux conserver pour mes prochains projets.</p>
</section><section id="prochaine-étape" class="level2"><h2 class="anchored" data-anchor-id="prochaine-étape">8. Prochaine étape</h2>
<p>Dans la prochaine publication, je vais faire le nettoyage de la base de données. J’ai réussi à extraire les données. Par contre, il faut maintenant visualiser les données et arriver à créer une base de données qui sera prête pour faire les analyses.</p>


</section> ]]></description>
  <category>Méthodologie augmentée par l’IA</category>
  <category>Utilisation appliquée de l&#39;IA</category>
  <guid>https://benoitplante.github.io/projets/2025-06-09-webscrapping-familia/</guid>
  <pubDate>Mon, 09 Jun 2025 04:00:00 GMT</pubDate>
  <media:content url="https://benoitplante.github.io/projets/2025-06-09-webscrapping-familia/banner.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Analyser les données de Famili@ en collaboration avec l’IA</title>
  <link>https://benoitplante.github.io/projets/2025-05-23-intro-familia/</link>
  <description><![CDATA[ 




<section id="analyser-les-données-de-famili-en-collaboration-avec-lia" class="level2">
<h2 class="anchored" data-anchor-id="analyser-les-données-de-famili-en-collaboration-avec-lia">Analyser les données de Famili@ en collaboration avec l’IA</h2>
<p>Depuis quelque temps, je m’intéresse aux possibilités de recherche offertes par les données secondaires. Internet regorge de trésors inexploités qui n’attendent qu’un regard curieux et un peu de code pour révéler leur potentiel. J’avais envie de m’y faire la main, de développer mes compétences en webscraping et en analyse de données, dans un domaine à la fois pertinent pour mon travail et riche intellectuellement.</p>
<p>C’est ainsi que je me suis tourné vers Famili@, la base documentaire des recherches sur la famille. J’ai découvert l’existence de cette base documentaire dans le cadre d’un projet de recherche mené en collaboration avec le Partenariat Familles en mouvance de l’INRS, organisme responsable de sa mise à jour. Créée en 1998, Famili@ est la première base documentaire francophone en sciences humaines consacrée exclusivement à la famille. Elle regroupe aujourd’hui plus de 18 000 fiches, couvrant thèses, articles et rapports souvent absents des grandes bases internationales.</p>
<p>Mais mon intérêt dépasse l’aspect documentaire : ce projet est aussi une porte d’entrée vers un champ que je souhaite explorer davantage, la méta-science, c’est-à-dire l’étude de la science elle-même. Avec Famili@, j’ai entre les mains un ensemble de données qui me permet d’observer l’évolution de la production scientifique en psychologie familiale au Québec.</p>
<section id="ce-que-je-veux-faire" class="level3">
<h3 class="anchored" data-anchor-id="ce-que-je-veux-faire">Ce que je veux faire</h3>
<p>Je veux documenter, de façon transparente et critique, l’ensemble du processus de recherche que j’entreprends à partir de la base Famili@. De l’extraction automatisée des données aux différentes analyses, et possible à la publication des résultats, chaque étape sera partagée ici, avec ses réussites, ses ratés, et surtout, ce que j’apprends en cours de route.</p>
</section>
<section id="lia-comme-coéquipière-de-recherche" class="level3">
<h3 class="anchored" data-anchor-id="lia-comme-coéquipière-de-recherche">L’IA comme coéquipière de recherche</h3>
<p>Ce projet est aussi un terrain d’expérimentation pour l’utilisation de l’intelligence artificielle générative dans un processus de d’analyse de données. De l’extraction des données avec du code R généré ou optimisé par l’IA, aux séances de remue-méninges pour faire émerger des idées d’analyses, en passant par les anlayses, et, ultimement, d’un article scientifique, l’IA m’accompagne à chaque étape.</p>
<p>Mon objectif est double : mieux comprendre comment ces outils peuvent enrichir et accélérer certaines étapes du travail scientifique, mais aussi identifier leurs limites, leurs biais et leurs angles morts. Bref, c’est un projet d’intégration critique de l’IA dans un processus de recherche appliquée en sciences humaines.</p>
</section>
<section id="pourquoi-partager-ça" class="level3">
<h3 class="anchored" data-anchor-id="pourquoi-partager-ça">Pourquoi partager ça ?</h3>
<p>Parce que l’IA bouleverse nos façons de faire — et qu’on gagne à rendre ces transformations visibles, discutables, perfectibles. Et parce que la base documentaire Famili@ me semble vraiment intéressante pour mieux comprendre comment les chercheurs et chercheuses en psychologie s’intéresse à la famille au Québec.</p>
<p>Dans la prochaine publications, je vous expliquerai comment j’ai construit ma propre base de données à partir du site Famili@. Ce sera l’occasion de plonger ensemble dans les défis du webscraping, étape fondatrice de ce projet.</p>
<hr>
<!--Include social share buttons-->
<!-- 
AddToAny check more: https://www.addtoany.com/buttons/for/website 
Using includes will make edits easier, will only need to add or remove button here if needed.
https://quarto.org/docs/authoring/includes.html
-->
<div class="a2a_kit a2a_kit_size_32 a2a_default_style">
<p><a class="a2a_dd" href="https://www.addtoany.com/share"></a> <a class="a2a_button_linkedin"></a> <a class="a2a_button_bluesky"></a> <a class="a2a_button_facebook"></a> <a class="a2a_button_copy_link"></a> <a class="a2a_button_email"></a></p>
</div>
<script async="" src="https://static.addtoany.com/menu/page.js"></script>


</section>
</section>

 ]]></description>
  <category>Méthodologie augmentée par l’IA</category>
  <category>Utilisation appliquée de l&#39;IA</category>
  <guid>https://benoitplante.github.io/projets/2025-05-23-intro-familia/</guid>
  <pubDate>Fri, 23 May 2025 04:00:00 GMT</pubDate>
  <media:content url="https://benoitplante.github.io/projets/2025-05-23-intro-familia/banner.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
